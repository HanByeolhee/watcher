<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.watcher.mapper.StoryMapper">

	<select id="getMainPopularStory" resultType="map" parameterType="storyParam">
		SELECT
			A.ID,
			A.TITLE,
			A.SUMMARY,
			B.NICKNAME,
			B.ID AS MEMBER_ID,
			C.REAL_FILE_NAME,
			CONCAT(C.SAVE_PATH,'/',C.SERVER_FILE_NAME) AS THUMBNAIL_IMG_PATH,
			D.CATEGORY_NM
		FROM STORY A
		LEFT JOIN MEMBER B ON B.LOGIN_ID = A.REG_ID
		LEFT JOIN FILE_RESOURCE C ON C.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY D ON D.ID = A.CATEGORY_ID
		INNER JOIN (
			SELECT A.REG_DATE, A.CONTENTS_TYPE, B.CATEGORY_ID,
			(
				SELECT S_A.CONTENTS_ID AS CNT FROM BOARD_LIKE S_A
				LEFT JOIN STORY S_B ON S_B.ID = S_A.CONTENTS_ID
				WHERE S_A.CONTENTS_TYPE = A.CONTENTS_TYPE AND S_A.LIKE_TYPE = A.LIKE_TYPE AND S_A.CANCEL_YN = A.CANCEL_YN
				AND S_B.CATEGORY_ID = B.CATEGORY_ID
				GROUP BY S_A.CONTENTS_ID
				ORDER BY COUNT(S_A.ID) DESC, S_A.REG_DATE DESC
				LIMIT 1
			) AS CONTENTS_ID
			, (
				SELECT COUNT(S_A.ID) AS CNT FROM BOARD_LIKE S_A
				LEFT JOIN STORY S_B ON S_B.ID = S_A.CONTENTS_ID
				WHERE S_A.CONTENTS_TYPE = A.CONTENTS_TYPE AND S_A.LIKE_TYPE = A.LIKE_TYPE AND S_A.CANCEL_YN = A.CANCEL_YN
				AND S_B.CATEGORY_ID = B.CATEGORY_ID
				GROUP BY S_A.CONTENTS_ID
				ORDER BY COUNT(S_A.ID) DESC, S_A.REG_DATE DESC
				LIMIT 1
			) AS CNT
			FROM BOARD_LIKE A
			LEFT JOIN STORY B ON B.ID = A.CONTENTS_ID
			WHERE A.CONTENTS_TYPE = 'STORY' AND A.LIKE_TYPE = '01' AND A.CANCEL_YN = 'N'
			GROUP BY B.CATEGORY_ID
		) E ON E.CONTENTS_ID = A.ID
		WHERE A.DELETE_YN = 'N' AND A.SECRET_YN = 'N'
	</select>


	<select id="listCnt" resultType="int" parameterType="storyParam">
		SELECT
			COUNT(*)
		FROM STORY A
		LEFT JOIN MEMBER B ON 1 = 1
		AND B.LOGIN_ID = A.REG_ID
		LEFT JOIN BOARD_TAGS C ON 1=1
		AND C.CONTENTS_TYPE = 'STORY'
		AND C.CONTENTS_ID = A.ID
		LEFT JOIN FILE_RESOURCE D ON 1=1
		AND D.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY E ON 1=1
		AND E.ID = A.CATEGORY_ID
		LEFT JOIN (SELECT CONTENTS_ID, COUNT(*) AS LIKE_CNT FROM BOARD_LIKE WHERE LIKE_TYPE='01' AND CANCEL_YN='N' GROUP BY CONTENTS_ID) F ON F.CONTENTS_ID = A.ID
		LEFT JOIN USER_DEFINE_CATEGORY G ON G.ID = A.MEMBER_CATEGORY_ID
		WHERE 1=1
		AND A.DELETE_YN = 'N'

		<if test="isOneYearData == 'YY'">
			AND (A.REG_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY) OR A.UPT_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY))
		</if>

		<choose>
			<when test="search_secret_yn == 'ALL'">
				AND A.SECRET_YN IN ('Y','N')
			</when>
			<when test="search_secret_yn == 'YY'">
				AND A.SECRET_YN IN ('Y')
			</when>
			<otherwise>
				AND A.SECRET_YN IN ('N')
			</otherwise>
		</choose>

		<if test="search_memId != null and search_memId != ''">
			AND A.REG_ID IN (SELECT LOGIN_ID FROM MEMBER WHERE ID = #{search_memId})
		</if>
		<if test="search_category_id != null and search_category_id != ''">
			AND A.CATEGORY_ID = #{search_category_id}
		</if>
		<if test="search_keyword != null and search_keyword != ''">
		  	AND (
		  	    A.TITLE LIKE CONCAT('%',#{search_keyword},'%')
				OR A.SUMMARY LIKE CONCAT('%',#{search_keyword},'%')
				OR FIND_IN_SET(#{search_keyword},REPLACE(C.TAGS,' ',''))
		  	)
		</if>
	</select>


	<select id="list" resultType="map" parameterType="storyParam">
		/* story > list */
		<include refid="story_select"/>
		WHERE 1=1
		AND A.DELETE_YN = 'N'

		<if test="isOneYearData == 'YY'">
			AND (A.REG_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY) OR A.UPT_DATE >= DATE_ADD(NOW(), INTERVAL -365 DAY))
		</if>

		<choose>
			<when test="search_secret_yn == 'ALL'">
				AND A.SECRET_YN IN ('Y','N')
			</when>
			<when test="search_secret_yn == 'YY'">
				AND A.SECRET_YN IN ('Y')
			</when>
			<otherwise>
				AND A.SECRET_YN IN ('N')
			</otherwise>
		</choose>

		<if test="search_memId != null and search_memId != ''">
			AND A.REG_ID IN (SELECT LOGIN_ID FROM MEMBER WHERE ID = #{search_memId})
		</if>

		<if test="search_category_id != null and search_category_id != ''">
			AND A.CATEGORY_ID = #{search_category_id}
		</if>

		<if test="search_member_category_id != null and search_member_category_id != ''">
			AND A.MEMBER_CATEGORY_ID = #{search_member_category_id}
		</if>

 		<if test="search_keyword != null and search_keyword != ''">
			AND (
				A.TITLE LIKE CONCAT('%',#{search_keyword},'%')
				OR A.SUMMARY LIKE CONCAT('%',#{search_keyword},'%')
				OR FIND_IN_SET(#{search_keyword},REPLACE(C.TAGS,' ',''))
			)
		</if>

		<choose>
			<when test="!(SortByRecommendationYn==null or SortByRecommendationYn=='') and SortByRecommendationYn == 'YY'">
				ORDER BY LIKE_CNT DESC, REG_DATE DESC
				LIMIT ${limitNum}
			</when>
			<otherwise>
				ORDER BY REG_DATE DESC
				LIMIT ${(pageNo-1)*listNo},${listNo}
			</otherwise>
		</choose>
	</select>


	<select id="view" resultType="map" parameterType="storyParam">
		/*story > view*/
		<include refid="story_select"/>
		WHERE 1=1
		AND A.DELETE_YN = 'N'
		<if test="!(id==null or id=='')">
			AND A.ID = #{id}
		</if>
	</select>

	<sql id="story_select">
		SELECT
			A.ID,
			A.CATEGORY_ID,
			A.MEMBER_CATEGORY_ID,
		    G.CATEGORY_NM AS MEMBER_CATEGORY_NM,
			A.TITLE,
			A.CONTENTS,
		    D.REAL_FILE_NAME,
		    CONCAT(D.SAVE_PATH,'/',D.SERVER_FILE_NAME) AS THUMBNAIL_IMG_PATH,
		    A.SUMMARY,
		    A.SECRET_YN,
			A.REG_ID,
			DATE_FORMAT(A.REG_DATE, '%Y.%m.%d %H:%i:%s') AS REG_DATE,
			A.UPT_ID,
			DATE_FORMAT(A.UPT_DATE, '%Y.%m.%d %H:%i:%s') AS UPT_DATE,
			B.ID AS MEMBER_ID,
			B.NICKNAME,
		    C.TAGS,
		    E.CATEGORY_NM,
			IFNULL(F.LIKE_CNT,0) AS LIKE_CNT,
			(
				SELECT
					COUNT(*)
				FROM COMMENT
				WHERE CONTENTS_TYPE = 'STORY' AND CONTENTS_ID = A.ID
			) AS COMMENT_CNT
		FROM STORY A
		LEFT JOIN MEMBER B ON 1 = 1
		AND B.LOGIN_ID = A.REG_ID
		LEFT JOIN BOARD_TAGS C ON 1=1
		AND C.CONTENTS_TYPE = 'STORY'
		AND C.CONTENTS_ID = A.ID
		LEFT JOIN FILE_RESOURCE D ON 1=1
		AND D.ID = A.THUMBNAIL_IMG_ID
		LEFT JOIN CATEGORY E ON 1=1
		AND E.ID = A.CATEGORY_ID
		LEFT JOIN (SELECT CONTENTS_ID, COUNT(*) AS LIKE_CNT FROM BOARD_LIKE WHERE LIKE_TYPE='01' AND CANCEL_YN='N' GROUP BY CONTENTS_ID) F ON F.CONTENTS_ID = A.ID
		LEFT JOIN USER_DEFINE_CATEGORY G ON G.ID = A.MEMBER_CATEGORY_ID
	</sql>


	<update id="update" parameterType="storyParam">

		UPDATE STORY SET
		<if test="categoryId != null and categoryId != ''">
			CATEGORY_ID = #{categoryId} ,
		</if>

		<if test="memberCategoryId != null and memberCategoryId != ''">
			MEMBER_CATEGORY_ID = #{memberCategoryId} ,
		</if>

		<if test="title != null and title != ''">
			TITLE = #{title} ,
		</if>

		<if test="contents != null and contents != ''">
			CONTENTS = #{contents} ,
		</if>

		<if test="thumbnailImgId != null and thumbnailImgId != ''">
			THUMBNAIL_IMG_ID = #{thumbnailImgId} ,
		</if>

		<if test="summary != null and summary != ''">
			SUMMARY = #{summary} ,
		</if>

		<if test="deleteYn != null and deleteYn != ''">
			DELETE_YN = #{deleteYn} ,
		</if>

		<if test="secretYn != null and secretYn != ''">
			SECRET_YN = #{secretYn} ,
		</if>

		UPT_ID = #{uptId},
		UPT_DATE = NOW()
		WHERE 1=1

		<choose>
			<when test="id_list != null">
				AND ID IN
				<foreach collection="id_list" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</when>
			<otherwise>
				AND ID=#{id}
			</otherwise>
		</choose>

		AND REG_ID=#{regId}
	</update>

	<insert id="insert" parameterType="storyParam" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO STORY(
			 REG_ID
			,REG_DATE
			,UPT_ID
			,UPT_DATE
			,CATEGORY_ID
			,MEMBER_CATEGORY_ID
			,TITLE
			,CONTENTS
			,THUMBNAIL_IMG_ID
			,SUMMARY
			,DELETE_YN
			,SECRET_YN
		)
		VALUES (
			 #{regId}
			,NOW()
			,#{uptId}
			,NOW()
			,#{categoryId}
			,#{memberCategoryId}
			,#{title}
			,#{contents}
			,#{thumbnailImgId}
			,#{summary}
			,'N'
			,#{secretYn}
		)
	</insert>

</mapper>